/*
BloomFilter.js v0.0.3 9/14/2025
https://github.com/rawify/BloomFilter.js

Copyright (c) 2025, Robert Eisele (https://raw.org/)
Licensed under the MIT license.
*/
'use strict';(function(u){function m(a,b){const c=Math.LN2;b=Math.ceil(-a*Math.log(b)/(c*c));a=Math.max(1,Math.round(b/a*c));return{bitCount:n(b),hashCount:a}}function p(a,b=0){b>>>=0;const c=a.length>>>0;var e=c>>>2;for(let f=0,g=0;f<e;f++,g+=4){var d=(a[g]|a[g+1]<<8|a[g+2]<<16|a[g+3]<<24)>>>0;d=Math.imul(d,-862048943);d=d<<15|d>>>17;d=Math.imul(d,461845907);b^=d;b=b<<13|b>>>19;b=Math.imul(b,5)+3864292196>>>0}e=0;d=c&3;d===3&&(e^=a[c-3]<<16);d>=2&&(e^=a[c-2]<<8);d>=1&&(e^=a[c-1],e=Math.imul(e,-862048943),
e=Math.imul(e<<15|e>>>17,461845907),b^=e>>>0);b^=c;b=Math.imul(b^b>>>16,2246822507);b=Math.imul(b^b>>>13,3266489909);return(b^b>>>16)>>>0}function n(a){const b=a&31;return b===0?a:a+(32-b)}function q(a,b){if(!(a instanceof h&&b instanceof h))throw Error("Both arguments must be BloomFilter instances.");if(a.bitCount!==b.bitCount||a.hashCount!==b.hashCount)throw Error("Bloom filters must have identical {bitCount, hashCount}.");}class h{constructor({capacity:a,errorRate:b,bitCount:c,hashCount:e,usePowerOfTwoBits:d=
!0}={}){this._indexMask=this._hashCount=this._bitCount=0;this._bitset=null;this._utf8=new TextEncoder;this._addCalls=0;if(Number.isInteger(c)&&Number.isInteger(e)&&c>0&&e>0)a=n(c),this._initialize(a,e,d);else{if(!(Number.isFinite(a)&&a>0&&b>0&&b<1))throw Error("Provide either {bitCount, hashCount} or valid {capacity, errorRate} with 0 < errorRate < 1.");const {bitCount:f,hashCount:g}=m(a,b);this._initialize(f,g,d)}}add(a){const {h1:b,h2:c}=this._hashPair(a);a=this._bitCount;const e=this._hashCount,
d=this._indexMask;let f=(b^1732295843)>>>0,g=(c|1)>>>0;for(let k=0;k<e;k++){const r=d?f&d:f%a;var l=this._bitset;const t=r>>>5;l[t]|=1<<(r&31);g=g+k>>>0;f=f+g>>>0}this._addCalls++;return this}addAll(a){for(const b of a)this.add(b);return this}mightContain(a){const {h1:b,h2:c}=this._hashPair(a);a=this._bitCount;const e=this._hashCount,d=this._indexMask;let f=(b^1732295843)>>>0,g=(c|1)>>>0;for(let l=0;l<e;l++){const k=d?f&d:f%a;if((this._bitset[k>>>5]&1<<(k&31))===0)return!1;g=g+l>>>0;f=f+g>>>0}return!0}clear(){this._bitset.fill(0);
this._addCalls=0}get bitCount(){return this._bitCount}get hashCount(){return this._hashCount}get bitset(){return this._bitset}get addCalls(){return this._addCalls}countSetBits(){var a=0;const b=this._bitset;for(let e=0;e<b.length;e++){var c=b[e];c-=c>>>1&1431655765;c=(c&858993459)+(c>>>2&858993459);c=c+(c>>>4)&252645135;c+=c>>>8;a+=c+(c>>>16)&63}return a}fillRatio(){return this.countSetBits()/this._bitCount}estimatedCardinality(){const a=this.countSetBits(),b=this._bitCount;return a===0?0:a>=b?Infinity:
-(b/this._hashCount)*Math.log(1-a/b)}estimatedFalsePositiveRate(){const a=this.fillRatio();return Math.pow(a,this._hashCount)}toJSON(){var a=this._bitCount,b=this._hashCount;var c=this._bitset;c=new Uint8Array(c.buffer,c.byteOffset,c.byteLength);let e="";for(let d=0;d<c.length;d++)e+=String.fromCharCode(c[d]);c=btoa(e);return{bitCount:a,hashCount:b,data:c}}static fromJSON({bitCount:a,hashCount:b,data:c}){if(!Number.isInteger(a)||!Number.isInteger(b)||typeof c!=="string")throw Error("Invalid BloomFilter JSON.");
b=new h({bitCount:a,hashCount:b,usePowerOfTwoBits:!1});const e=a+31>>>5;var d=atob(c);c=new Uint8Array(d.length);for(var f=0;f<d.length;f++)c[f]=d.charCodeAt(f);d=4-(c.byteLength&3)&3;f=c;d&&(d=new Uint8Array(c.byteLength+d),d.set(c),f=d);c=new Uint32Array(f.buffer);e&&c.length!==e&&(d=new Uint32Array(e),d.set(c.subarray(0,Math.min(c.length,e))),c=d);b._bitset.set(c.subarray(0,e));b._indexMask=a>0&&(a&a-1)===0?a-1:0;return b}static optimalParameters(a,b){return m(a,b)}static union(a,b){q(a,b);const c=
new h({bitCount:a._bitCount,hashCount:a._hashCount,usePowerOfTwoBits:!1});a=a._bitset;b=b._bitset;const e=c._bitset;for(let d=0;d<a.length;d++)e[d]=a[d]|b[d];return c}static intersection(a,b){q(a,b);const c=new h({bitCount:a._bitCount,hashCount:a._hashCount,usePowerOfTwoBits:!1});a=a._bitset;b=b._bitset;const e=c._bitset;for(let d=0;d<a.length;d++)e[d]=a[d]&b[d];return c}_initialize(a,b,c){c&&(c=a<=1?1:1<<32-Math.clz32(a-1),c>a&&(a=c));this._bitset=new Uint32Array(a+31>>>5);this._bitCount=a;this._hashCount=
b;this._indexMask=a>0&&(a&a-1)===0?a-1:0;this._addCalls=0}_hashPair(a){var b=this._utf8;b=typeof a==="string"?b.encode(a):a instanceof Uint8Array?a:ArrayBuffer.isView(a)&&a.buffer?new Uint8Array(a.buffer,a.byteOffset,a.byteLength):a instanceof ArrayBuffer?new Uint8Array(a):b.encode(String(a));a=p(b,2538058380)>>>0;b=p(b,2246822507)>>>0;return{h1:a,h2:b}}}typeof define==="function"&&define.amd?define([],function(){return h}):typeof exports==="object"?(Object.defineProperty(h,"__esModule",{value:!0}),
h["default"]=h,h.BloomFilter=h,module.exports=h):u.BloomFilter=h})(this);
